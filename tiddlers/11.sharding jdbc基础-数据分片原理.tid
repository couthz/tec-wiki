created: 20220703081150066
creator: TidGiUser
modified: 20220704111050790
modifier: TidGiUser
tags: 分库分表 fx
title: 11.sharding jdbc基础-数据分片原理
type: text/vnd.tiddlywiki

! 高并发数据分片的两大工作

一般情况下，开发维度的数据分片，大多是以水平切分模式（水平分库、分表）为基础来说的，

垂直分片主要在于 运维维度，或者 或者做存储的深级改造的时候。

1. 分片的拆分

2. 分片的路由:当执行一条SQL时，会通过 路由策略 ， 将数据route(路由)到不同的分片内。

面临的选择:

* 分片键的选择(redis只有一个key, es利用_id, 都不存在这一点)
* 分片算法的选择
	** redis cluster根据key做hash,得到槽位
* 分片策略的选择(其实是专门针对sharding jdbc, 因为只有它可以选择key, 算法也比较灵活)


!! es的两大工作(???)
!! redis cluster的两大工作
[[redis cluster]]

!! sharding jdbc的数据分片两大工作

> 课上的例子可以看做, 一开始只有一个库, 每种表只有一个, 这时做拆分
1. 分片的拆分(库+表两个维度)
表的拆分：

将一张大表 t_order ，拆分生成数个表结构完全一致的小表 t_order_0、t_order_1、···、t_order_n，

每张小表，只存储大表中的一部分数据，

2. 分片的路由

''> 即: sql交给哪个库的哪个表执行''

当执行一条SQL时，会通过 路由策略 ， 将数据route(路由)到不同的分片内。

* 数据源的路由

* 表的路由

面临的问题：

* 分片key的选择

* 分片策略的选择

* 分片算法的选择

