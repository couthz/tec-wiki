created: 20220703074120449
creator: TidGiUser
modified: 20220705040916517
modifier: TidGiUser
tags: 分库分表
title: 10.sharding jdbc基础-瓶颈
type: text/vnd.tiddlywiki

https://www.cnblogs.com/crazymakercircle/p/14199586.html

! 介绍
sharding jdbc主要是为完成数据库''水平分库和水平分表''

! 数据库瓶颈指标

!! 容量瓶颈
单库: 1TB (一般情况下:机械硬盘 32G-64G内存)

单表: 500w条记录

> 都是比较悲观的指标, 并且随着硬件升级会提升的

!! 吞吐量

单库: 1500qps

!! 为什么单表500w-1000w

500w条,肯定在3层以内

那需要几次IO呢?? 得看看[[mysql B+树索引]]

[img[截屏2022-07-03 15.47.26.png]]

! 为什么官方建议用增长主键作为ID,为什么不用UUID
[img[截屏2022-07-03 15.53.11.png]]

! 问题: 什么情况下用水平分表???除了单表数据量太大的情况??

<<<
垂直拆分的意思，就是把一个有很多字段的表给拆分成多个表，或者是多个库上去。每个库表的结构都不一样，每个库表都包含部分字段。一般来说，会将较少的访问频率很高的字段放到一个表里去，然后将较多的访问频率很低的字段放到另外一个表里去。因为数据库是有缓存的，你访问频率高的行字段越少，就可以在缓存里缓存更多的行，性能就越好。这个一般在表层面做的较多一些。

这个其实挺常见的，不一定我说，大家很多同学可能自己都做过，把一个大表拆开，订单表、订单支付表、订单商品表。

还有表层面的拆分，就是水平分表，将一个表变成 N 个表，就是让每个表的数据量控制在一定范围内，保证 SQL 的性能。否则单表数据量越大，SQL 性能就越差。一般是 200 万行左右，不要太多，但是也得看具体你怎么操作，也可能是 500 万，或者是 100 万。你的SQL越复杂，就最好让单表行数越少。
<<<