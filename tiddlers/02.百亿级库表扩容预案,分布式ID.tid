created: 20220702084734883
creator: TidGiUser
modified: 20220704111050789
modifier: TidGiUser
tags: 分库分表 fx
title: 02.百亿级库表扩容预案,分布式ID
type: text/vnd.tiddlywiki

! 为啥要预案
https://www.notion.so/8-bb28edd5be514ff18e2ba555ed23f4aa

避免返工, 这样的规划会影响例如ID分片算法的选择


! 两种扩容场景(高级开发主导,dba不管这个规划),扩容目标

> 

''注意流量瓶颈的场景中,肯定是加了mq了,10wqps不可能直接打到2个库上''
[img[截屏2022-07-02 16.51.36.png]]

! 动态扩容实操(DBA主导)

1. 扩展到新扩表

2. 更换应用的数据源

[img[截屏2022-07-02 16.57.30.png]]

! id生成和分片算法以及衡量指标

id分片:

生产id的算法:snowflake， uuid， 分布式自增

分片的算法:id取模， 一致性hash

''度量的指标: 少倾斜 + 少迁移 + 分片结果比较好预知(这个指的是方便定位问题) + 高性能''

少倾斜:

* id取模: 根据分片建的递增的均匀程度而定，递增越不均匀，数据倾斜越严重 
* 一致性hash分片: 少倾斜,比较均衡

少迁移:

* id取模: 较的少扩容迁移，采用双倍扩容策略，避免数据迁移。扩容前每个节点的数据，一半要迁移至 一个新增节点中，一半不动
* 一致性 hash分片: 虚拟节点数量很多时依然会造成不少数据迁移， 分片越多，数据迁移越多

分片结果比较好预知:

* id取模, 分片结果比较好预知 
* 一致性hash，分片结果比较好预知

高性能:

* 雪花: 生产场景偶有倾斜现象，有时钟回拨问题 
* uuid: 存储低性能 不推荐

<<<
# QA：分布式ID？？

[https://www.zhihu.com/question/20180484](https://www.zhihu.com/question/20180484)

# 场景：

1. 单个库拆分了，单表内的自增ID不适用了

2. 集群内各种需要产生分布式ID的情况（例如给赛诺菲发的消息ID，优惠券ID）

# 问题，需求：

1. 注意连续ID的信息安全：如果ID是连续的，恶意用户的扒取工作就非常容易做了，直接按照顺序下载指定URL即可；如果是订单号就更危险了，竞对可以直接知道我们一天的单量。所以在一些应用场景下，会需要ID无规则、不规则

2. 可用性

3. 高并发
<<<

